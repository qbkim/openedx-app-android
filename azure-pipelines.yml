trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildDir: '$(Build.SourcesDirectory)'

steps:
# üõ†Ô∏è Clean Java environment first
- script: |
    sudo apt-get purge -y openjdk-* || true
    sudo rm -rf /usr/lib/jvm || true
  displayName: 'Clean Java Environment'

# ‚òï Install Java 17 explicitly
- script: |
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk
    sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
    sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    echo "##vso[task.setvariable variable=JAVA_HOME]$JAVA_HOME"
    java -version
    javac -version
  displayName: 'Install Java 17'

# üîÑ Verify Java setup
- script: |
    echo "JAVA_HOME: $JAVA_HOME"
    echo "PATH: $PATH"
    which java
    which javac
  displayName: 'Verify Java Installation'

# üõ†Ô∏è Android SDK setup
- script: |
    export ANDROID_HOME=/opt/hostedtoolcache/AndroidSDK
    echo "##vso[task.setvariable variable=ANDROID_HOME]$ANDROID_HOME"
    echo "ANDROID_HOME: $ANDROID_HOME"
    ls -la $ANDROID_HOME/cmdline-tools/latest/bin/
    $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list || true
  displayName: 'Setup Android SDK'

# üîß Gradle build with clean and debug
- task: Gradle@3
  inputs:
    gradleWrapperFile: '$(buildDir)/gradlew'
    workingDirectory: '$(buildDir)'
    options: '--stacktrace --debug --no-daemon'
    tasks: 'clean assembleDebug'
    javaHomeOption: 'Path'
    jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'
    publishJUnitResults: false
  displayName: 'Build with Gradle'

# üì¶ Optional: Upload build artifacts if build succeeds
- task: PublishBuildArtifacts@1
  condition: succeeded()
  inputs:
    PathtoPublish: '$(buildDir)/app/build/outputs/apk/'
    ArtifactName: 'apk'
    publishLocation: 'Container'
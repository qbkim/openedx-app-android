trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildDir: '$(Build.SourcesDirectory)'
  GRADLE_OPTS: '-Dorg.gradle.jvmargs=-Xmx4096m'

steps:
# 1. Clean environment (no code changes needed)
- script: |
    sudo rm -rf /usr/lib/jvm || true
    sudo rm -rf ~/.gradle/caches || true
  displayName: 'üßπ Clean Environment'

# 2. Install Java 17 (matches your build.gradle requirements)
- script: |
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk
    sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    echo "##vso[task.setvariable variable=JAVA_HOME]$JAVA_HOME"
    java -version
  displayName: '‚òï Install Java 17'

# 3. Android SDK setup (no code changes needed)
- script: |
    export ANDROID_HOME=/opt/hostedtoolcache/AndroidSDK
    echo "##vso[task.setvariable variable=ANDROID_HOME]$ANDROID_HOME"
    yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "build-tools;34.0.0"
  displayName: 'ü§ñ Setup Android SDK'

# 4. Build with optimized settings (no code changes needed)
- task: Gradle@3
  inputs:
    gradleWrapperFile: '$(buildDir)/gradlew'
    workingDirectory: '$(buildDir)'
    options: '--stacktrace --no-daemon --max-workers=2'
    tasks: 'clean assembleDebug'
    javaHomeOption: 'Path'
    jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'
  displayName: 'üõ†Ô∏è Build with Gradle'

# 5. Upload artifacts (optional)
- task: PublishBuildArtifacts@1
  condition: succeeded()
  inputs:
    PathtoPublish: '$(buildDir)/app/build/outputs/apk/'
    ArtifactName: 'apk'
    publishLocation: 'Container'
  displayName: 'üì¶ Upload APKs'
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildDir: '$(Build.SourcesDirectory)'
  GRADLE_OPTS: '-Dorg.gradle.jvmargs=-Xmx4096m'

steps:
# 1. Basic Java setup
- script: |
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk
    sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
    echo "##vso[task.setvariable variable=JAVA_HOME]/usr/lib/jvm/java-17-openjdk-amd64"
  displayName: 'Install Java 17'

# 2. Minimal Android setup
- script: |
    export ANDROID_HOME=/usr/local/lib/android/sdk
    yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "build-tools;34.0.0"
  displayName: 'Setup Android SDK'

# 3. Critical Gradle build with full diagnostics
- task: Gradle@3
  inputs:
    gradleWrapperFile: '$(buildDir)/gradlew'
    workingDirectory: '$(buildDir)'
    options: '--stacktrace --no-daemon --info --scan'
    tasks: 'clean assembleDebug --refresh-dependencies'
    javaHomeOption: 'Path'
    jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'
  displayName: 'Run Gradle Build'

# 4. Essential failure analysis
- script: |
    echo "=== BUILD FAILURE ANALYSIS ==="
    # Show last 100 lines of build output
    tail -n 100 $(buildDir)/app/build/outputs/logs/manifest-merger-debug-report.txt || true
    # Show dependency tree
    ./gradlew :app:dependencies --configuration debugRuntimeClasspath || true
  workingDirectory: $(buildDir)
  condition: failed()
  displayName: 'Diagnose Failure'